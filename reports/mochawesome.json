{
  "stats": {
    "suites": 1,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2023-02-07T13:21:48.684Z",
    "end": "2023-02-07T13:22:18.811Z",
    "duration": 30127,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 1,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "cb36165d-96dc-4354-8a9f-9d586c1f31fb",
      "title": "",
      "fullFile": "/Users/sushmita/brenntag-automation-/tests/test_password_reset.js",
      "file": "/tests/test_password_reset.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1aa091e4-027d-459b-aa53-109ed1cce1b3",
          "title": "Password Reset Test",
          "fullFile": "/Users/sushmita/brenntag-automation-/tests/test_password_reset.js",
          "file": "/tests/test_password_reset.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook for \"should send instructions to reset password\"",
              "fullTitle": "Password Reset Test \"before each\" hook for \"should send instructions to reset password\"",
              "timedOut": true,
              "duration": 30119,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser(\"chrome\").build();\nawait driver.get(loginPageURL);",
              "err": {
                "message": "Error: Timeout of 30000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/sushmita/brenntag-automation-/tests/test_password_reset.js)",
                "estack": "Error: Timeout of 30000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/sushmita/brenntag-automation-/tests/test_password_reset.js)\n    at listOnTimeout (node:internal/timers:568:17)\n    at process.processTimers (node:internal/timers:511:7)",
                "diff": null
              },
              "uuid": "848068f7-fdca-40d3-8bc5-054310c75cf7",
              "parentUUID": "1aa091e4-027d-459b-aa53-109ed1cce1b3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should send instructions to reset password",
              "fullTitle": "Password Reset Test should send instructions to reset password",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.findElement(By.css(\"p.c57e100a6.cdd0fccde a.c23626b08.cb8256979.cae524cbf\")).click();\nawait driver.findElement(By.id(\"email\")).sendKeys(\"sushmita94mishra@gmail.com\");\n     // await email.sendKeys(\"recruitment@digib.com\");\n     await driver.findElement(By.xpath(\"//button[@value='default']\")).click();\nlet resetMessage = await driver.findElement(By.css(\"div.c3d858048\")).getText();\nassert.equal(resetMessage, \"Password reset instructions sent\");",
              "err": {},
              "uuid": "eab2a9a9-b5c8-4931-ac8b-7b644491833f",
              "parentUUID": "1aa091e4-027d-459b-aa53-109ed1cce1b3",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "eab2a9a9-b5c8-4931-ac8b-7b644491833f"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "reports",
        "reportName": "TestReport",
        "reportTitle": "Test Report for e2e test"
      },
      "version": "6.2.0"
    }
  }
}